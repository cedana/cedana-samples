#!/bin/bash
set -e

## --------------------
## Setup and env var check
## --------------------

echo "Setting up remote cedana instance..."

source /etc/environment

# Check if CEDANA_URL and CEDANA_AUTH_TOKEN are set
if [[ -z "$CEDANA_URL" ]] || [[ -z "$CEDANA_AUTH_TOKEN" ]]; then
  echo "CEDANA_URL and CEDANA_AUTH_TOKEN must be set."
  exit 1
fi

# Check for AWS creds
if [[ -z "$AWS_ACCESS_KEY_ID" ]] || [[ -z "$AWS_SECRET_ACCESS_KEY" ]]; then
  echo "AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY must be set."
  exit 1
fi

## --------------------
## Versions
## --------------------
DRIVER_VERSION="550"
GO_VERSION="1.23.5"
CEDANA_VERSION="v0.9.241"
## --------------------
## Install nvidia driver/s
## --------------------
DRIVER_VERSION="550"
if command -v nvidia-smi &>/dev/null; then
  INSTALLED_VERSION=$(nvidia-smi --query-gpu=driver_version --format=csv,noheader | cut -d. -f1)
  if [[ "$INSTALLED_VERSION" == "$DRIVER_VERSION" ]]; then
    echo "NVIDIA driver ${DRIVER_VERSION} is already installed." # continue and skip
  else
    echo "Different NVIDIA driver version detected (${INSTALLED_VERSION}). Updating..."
  fi
fi

echo "### Installing NVIDIA driver ${DRIVER_VERSION}..."
sudo apt-get update
sudo apt-get install -y "nvidia-driver-${DRIVER_VERSION}"

echo "### NVIDIA driver ${DRIVER_VERSION} installed successfully. ###"

sudo apt-get update && sudo apt-get install -y nvidia-driver-550
echo "### Nvidia driver installed successfully. ###"

## --------------------
## Install criu prereqs
## --------------------
sudo apt-get update && sudo apt-get install -y libnet1-dev libprotobuf-dev libprotobuf-c-dev protobuf-c-compiler protobuf-compiler python3-protobuf
echo "### CRIU prereqs installed successfully."

## Download and install go
echo "### Installing Go ${GO_VERSION}..."
curl -L https://go.dev/dl/go1.23.5.linux-amd64.tar.gz -o go1.23.5.linux-amd64.tar.gz
sudo tar -C /usr/local -xzf go1.23.5.linux-amd64.tar.gz
export PATH=$PATH:/usr/local/go/bin
go env -w GOMODCACHE=$HOME/golang/pkg/mod

if ! grep -q "/usr/local/go/bin" ~/.bashrc; then
  echo 'export PATH=$PATH:/usr/local/go/bin' >>~/.bashrc
fi

echo "### Go ${GO_VERSION} installed successfully. ###"

## --------------------
## Download and install cedana & plugins
## --------------------
echo "### Installing and starting cedana... ###"
rm -rf cedana && git clone https://github.com/cedana/cedana.git
## FIXME - grab release/s from endpoint here
pushd cedana || exit
git checkout ${CEDANA_VERSION}
make
sudo cedana plugin install criu gpu streamer
popd || exit

## --------------------
## Install cedana samples
## --------------------
echo "### Installing cedana samples dependencies... ###"
pushd cedana-samples || exit
sudo apt-get install -y python3-venv python3-pip
python3 -m venv venv
pip install -r requirements.txt
popd || exit

## --------------------
## Validate that everything is operational
## --------------------
echo '{"Full": true}' | grpc-client-cli -service daemon.Daemon -method HealthCheck localhost:8080 | jq '[
  .Results[].Components[] |
  select(.Errors != []) |
  {Component: .Name, Errors: .Errors}
] | if length == 0 then "No errors found" else . end'

## --------------------
## Set up s3fs
## --------------------
echo "### Setting up s3fs... ###"
sudo apt install s3fs
echo "${AWS_ACCESS_KEY_ID}:${AWS_SECRET_ACCESS_KEY}" >~/.passwd-s3fs
chmod 600 ~/.passwd-s3fs
sudo mkdir -p /mnt/s3
